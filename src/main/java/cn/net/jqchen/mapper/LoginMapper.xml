<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.net.jqchen.dao.LoginMapper" >
  <resultMap id="BaseResultMap" type="cn.net.jqchen.model.Login" >
    <id column="login_id" property="loginId" jdbcType="INTEGER" />
    <result column="login_account" property="loginAccount" jdbcType="VARCHAR" />
    <result column="login_pwd" property="loginPwd" jdbcType="VARCHAR" />
    <result column="account_degree" property="accountDegree" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    login_id, login_account, login_pwd, account_degree
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.net.jqchen.model.LoginExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from login
    where login_id = #{loginId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from login
    where login_id = #{loginId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.net.jqchen.model.LoginExample" >
    delete from login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.net.jqchen.model.Login" >
    insert into login (login_id, login_account, login_pwd, 
      account_degree)
    values (#{loginId,jdbcType=INTEGER}, #{loginAccount,jdbcType=VARCHAR}, #{loginPwd,jdbcType=VARCHAR}, 
      #{accountDegree,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.net.jqchen.model.Login" >
    insert into login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginId != null" >
        login_id,
      </if>
      <if test="loginAccount != null" >
        login_account,
      </if>
      <if test="loginPwd != null" >
        login_pwd,
      </if>
      <if test="accountDegree != null" >
        account_degree,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginId != null" >
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="loginAccount != null" >
        #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="accountDegree != null" >
        #{accountDegree,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.net.jqchen.model.LoginExample" resultType="java.lang.Integer" >
    select count(*) from login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update login
    <set >
      <if test="record.loginId != null" >
        login_id = #{record.loginId,jdbcType=INTEGER},
      </if>
      <if test="record.loginAccount != null" >
        login_account = #{record.loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.loginPwd != null" >
        login_pwd = #{record.loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.accountDegree != null" >
        account_degree = #{record.accountDegree,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update login
    set login_id = #{record.loginId,jdbcType=INTEGER},
      login_account = #{record.loginAccount,jdbcType=VARCHAR},
      login_pwd = #{record.loginPwd,jdbcType=VARCHAR},
      account_degree = #{record.accountDegree,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.net.jqchen.model.Login" >
    update login
    <set >
      <if test="loginAccount != null" >
        login_account = #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        login_pwd = #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="accountDegree != null" >
        account_degree = #{accountDegree,jdbcType=TINYINT},
      </if>
    </set>
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.net.jqchen.model.Login" >
    update login
    set login_account = #{loginAccount,jdbcType=VARCHAR},
      login_pwd = #{loginPwd,jdbcType=VARCHAR},
      account_degree = #{accountDegree,jdbcType=TINYINT}
    where login_id = #{loginId,jdbcType=INTEGER}
  </update>
</mapper>